@using GULLEM_NEW_MVC.Entities
@model GULLEM_NEW_MVC.Entities.Loan

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Loan Application</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <h1 class="mt-4">Add Loan for Client ID: @Model.Borrower</h1>
                <div class="mb-3">
                    <a class="btn btn-primary" href="@Url.Action("Index", "Client")">Main Page</a>
                    <a class="btn btn-success" href="@Url.Action("UserLoans", "Loan")">Return</a>
                </div>

                <form asp-action="AddLoan" asp-controller="Loan" method="post">
                    <input type="hidden" asp-for="Borrower">

                    <div class="form-group">
                        <label asp-for="Amount" class="control-label">Amount</label>
                        <input asp-for="Amount" class="form-control" />
                        <span asp-validation-for="Amount" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Term" class="control-label">Term</label>
                        <input asp-for="Term" class="form-control" />
                        <span asp-validation-for="Term" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Payment" class="control-label">Payment</label>
                        <select asp-for="Payment" class="form-control">
                            <option value="">Choose Payment Duration</option>
                            <option value="Daily">Daily</option>
                            <option value="Weekly">Weekly</option>
                            <option value="Bi-Monthly">Bi-Monthly</option>
                            <option value="Monthly">Monthly</option>
                            <option value="Yearly">Yearly</option>
                        </select>
                        <span asp-validation-for="Payment" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Interest" class="control-label">Interest</label>
                        <input asp-for="Interest" class="form-control" />
                        <span asp-validation-for="Interest" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Deduction" class="control-label">Deduction</label>
                        <input asp-for="Deduction" class="form-control" />
                        <span asp-validation-for="Deduction" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="AmountPaid" class="control-label">Amount Paid</label>
                        <input asp-for="AmountPaid" class="form-control" readonly />
                        <span asp-validation-for="AmountPaid" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="InterestAmount" class="control-label">Interest Amount</label>
                        <input asp-for="InterestAmount" class="form-control" readonly />
                        <span asp-validation-for="InterestAmount" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Total" class="control-label">Total</label>
                        <input asp-for="Total" class="form-control" readonly />
                        <span asp-validation-for="Total" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="ReceivableAmount" class="control-label">Receivable Amount</label>
                        <input asp-for="ReceivableAmount" class="form-control" readonly />
                        <span asp-validation-for="ReceivableAmount" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="DueDate" class="control-label">Due Date</label>
                        <input type="date" asp-for="DueDate" class="form-control" readonly />
                        <span asp-validation-for="DueDate" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <input type="submit" class="btn btn-success" value="Add Loan">
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        $(document).ready(function () {
            function calculateLoanDetails() {
                var amount = parseFloat($('input[name="Amount"]').val()) || 0;
                var term = parseInt($('input[name="Term"]').val()) || 0;
                var interest = parseFloat($('input[name="Interest"]').val()) || 0;
                var deduction = parseFloat($('input[name="Deduction"]').val()) || 0;
                var paymentFrequency = $('select[name="Payment"]').val();

                var paymentTerms = term;
                var dueDate = new Date();

                switch (paymentFrequency) {
                    case 'Daily':
                        dueDate.setDate(dueDate.getDate() + term);
                        break;
                    case 'Weekly':
                        dueDate.setDate(dueDate.getDate() + (term * 7));
                        break;
                    case 'Bi-Monthly':
                        dueDate.setMonth(dueDate.getMonth() + Math.ceil(term / 2));
                        break;
                    case 'Monthly':
                        dueDate.setMonth(dueDate.getMonth() + term);
                        break;
                    case 'Yearly':
                        dueDate.setFullYear(dueDate.getFullYear() + Math.floor(term / 12));
                        break;
                    default:
                        dueDate = new Date();
                        break;
                }

                var baseAmountPerTerm = amount / paymentTerms;
                var interestAmount = baseAmountPerTerm * (interest / 100);
                var amountPaidPerTerm = baseAmountPerTerm + interestAmount;
                var totalReceivable = amountPaidPerTerm * paymentTerms;
                var totalAfterDeductions = totalReceivable - deduction;

                $('input[name="AmountPaid"]').val(amountPaidPerTerm.toFixed(2));
                $('input[name="InterestAmount"]').val(interestAmount.toFixed(2));
                $('input[name="Total"]').val(totalAfterDeductions.toFixed(2));
                $('input[name="ReceivableAmount"]').val(totalReceivable.toFixed(2));
                $('input[name="DueDate"]').val(dueDate.toISOString().split('T')[0]);
            }

            $('input[name="Amount"], input[name="Term"], input[name="Interest"], input[name="Deduction"], select[name="Payment"]').on('input change', calculateLoanDetails);

            calculateLoanDetails();
        });
    </script>
</body>

</html>
