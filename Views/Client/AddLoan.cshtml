@model GULLEM_NEW_MVC.Entities.Loan

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Add Loan</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
<div class="Loan_Information">
    <h1>LOAN DETAILS</h1>
    <a class="btn btn-primary" href="@Url.Action("Index", "Client")">Mainpage</a>
    @if (Model != null)
    {
        <a class="btn btn-success" href="@Url.Action("Loan", "Client", new { id = Model.Id })">Go Back</a>
    }

    <form asp-action="AddLoan" method="post">
        <input type="hidden" asp-for="Borrower">

        <div class="form-group">
            <label asp-for="Amount" class="control-label"></label>
            <input asp-for="Amount" class="form-control"/>
            <span asp-validation-for="Amount" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Term" class="control-label"></label>
            <input asp-for="Term" class="form-control"/>
            <span asp-validation-for="Term" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Payment" class="control-label"></label>
            <select asp-for="Payment" class="form-control">
                <option value="">Choose Payment Duration</option>
                <option value="Daily">Daily</option>
                <option value="Weekly">Weekly</option>
                <option value="Bi-Monthly">Bi-Monthly</option>
                <option value="Monthly">Monthly</option>
                <option value="Yearly">Yearly</option>
            </select>
            <span asp-validation-for="Payment" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Interest" class="control-label"></label>
            <input asp-for="Interest" class="form-control"/>
            <span asp-validation-for="Interest" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Deduction" class="control-label"></label>
            <input asp-for="Deduction" class="form-control"/>
            <span asp-validation-for="Deduction" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="">Payment per term</label>
            <input asp-for="AmountPaid" class="form-control" readonly/>
            <span asp-validation-for="AmountPaid" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Total" class="control-label"></label>
            <input asp-for="Total" class="form-control" readonly/>
            <span asp-validation-for="Total" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="DueDate" class="control-label">Loan End</label>
            <input type="date" asp-for="DueDate" class="form-control" readonly/>
            <span asp-validation-for="DueDate" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input type="hidden" asp-for="ReceivableAmount" class="form-control" readonly/>
            <span asp-validation-for="ReceivableAmount" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input type="submit" class="btn btn-success" value="ADD LOAN">
        </div>
    </form>
</div>

<script>
    $(document).ready(function() {
        function calculateLoanDetails() {
            var amount = parseFloat($('input[name="Amount"]').val()) || 0;
            var term = parseInt($('input[name="Term"]').val()) || 0;
            var interest = parseFloat($('input[name="Interest"]').val()) || 0;
            var deduction = parseFloat($('input[name="Deduction"]').val()) || 0;
            var paymentFrequency = $('select[name="Payment"]').val();

            var paymentTerms = term;
            var dueDate = new Date();

            switch (paymentFrequency) {
                case 'Daily':
                    dueDate.setDate(dueDate.getDate() + term);
                    break;
                case 'Weekly':
                    dueDate.setDate(dueDate.getDate() + (term * 7));
                    break;
                case 'Bi-Monthly':
                    dueDate.setMonth(dueDate.getMonth() + (term * 2));
                    break;
                case 'Monthly':
                    dueDate.setMonth(dueDate.getMonth() + term);
                    break;
                case 'Yearly':
                    dueDate.setFullYear(dueDate.getFullYear() + (term / 12));
                    break;
                default:
                    dueDate = new Date();
                    break;
            }

            var baseAmountPerTerm = amount / paymentTerms;
            var interestAmountPerTerm = baseAmountPerTerm * (interest / 100);
            var amountPaidPerTerm = baseAmountPerTerm + interestAmountPerTerm;

            var totalInterest = interestAmountPerTerm * paymentTerms;
            var totalAmount = (amount + totalInterest) - deduction;

            $('input[name="AmountPaid"]').val(amountPaidPerTerm.toFixed(2));
            $('input[name="Total"]').val(totalAmount.toFixed(2));

            var dueDateString = dueDate.toISOString().split('T')[0];
            $('input[name="DueDate"]').val(dueDateString);

            $('input[name="ReceivableAmount"]').val(totalAmount.toFixed(2));
        }

        $('input[name="Amount"], input[name="Term"], input[name="Interest"], input[name="Deduction"], select[name="Payment"]').on('input change', function() {
            calculateLoanDetails();
        });

        calculateLoanDetails();
    });
</script>

</body>
</html>
